import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class 실패율 {

	public static void main(String[] args) {
		int[] stages = {2, 1, 2, 6, 2, 4, 3, 3};
		int N = 5;

		int[] answer = new int[N];
		double[] pass = new double[N];
		double[] nope = new double[N];
		double[] failureRates = new double[N];
		for (int i = 0; i < stages.length; i++) {
			for (int j = 0; j < N; j++) {
				if (j == 0) {
					nope[j] = 0;
					pass[j] = 0;
				}
				if (j == stages[i] - 1) {
					nope[j]++;
				}
				if (j <= stages[i] - 1) {
					pass[j]++;
				}
			}
		}

		List<Double> lst = new ArrayList<>();
		List<Double> stage = new ArrayList<>();
		for (int i = 0; i < N; i++) {
			if (pass[i] == 0 || nope[i] == 0) {
				 failureRates[i] = 0;
			} else {
				 failureRates[i] = nope[i]/nope[i];
			}
		}

		Collections.sort(lst);
		Collections.reverse(lst);

		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				if (lst.get(i).compareTo(stage.get(j)) == 0) {
					answer[i] = j + 1;
					break;
				}
			}
			
		}

		// 중복 값 내림차순 정렬
		for (int i = 1; i < N; i++) {
			if (lst.get(i).compareTo(lst.get(i - 1)) == 0) {
				List<Integer> check = new ArrayList<>();
				for (int e = 0; e < N; e++) {
					for (int d = 0; d < N; d++) {
						if (lst.get(e).compareTo(stage.get(d)) == 0) {
							check.add(d + 1);
						}
					}
				}
				
				for (int b = 0; b < check.size(); b++) {
					int have =0;
					for (int a : answer) {
						if(check.get(b)==a) {
							have++;
						}
					}
					if(have==0) {
						answer[i]=check.get(b);
						break;
					}
				}
			}
		}
		
		
		for(int i =0; i<N; i++) {
			System.out.println(answer[i]);
		}
//		Map<Integer, Double> rMap = new HashMap<>();
//		for(int i=0; i<N; i++) {
//			rMap.put(i+1, nope[i]/(double)pass[i]);
//		}
//		
//		int[] count = new int[N];
//		for(int i=0; i<N; i++) {
//			for(int j=0; j<N; j++) {
//				if(i==j) {
//					continue;
//				}else {
//					if(rMap.get(i)>=rMap.get(j)) {
//						count[i]++;
//					}
//				}
//				
//			}
//			
//		}
//		
//		// 어려웡
//		
//		for(int i=0; i<N; i++) {
//			System.out.println(i +  " : " +pass[i]);
//			System.out.println(i +  " : " +nope[i]);
//		}

	}

}
